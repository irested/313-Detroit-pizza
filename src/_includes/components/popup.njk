{%- if page.url === "/" -%}
<div id="site-popup-overlay" class="site-popup-overlay" aria-hidden="true" role="dialog" aria-label="Promotion">
    <div class="site-popup">
        <button type="button" class="site-popup-close" aria-label="Fermer le popup">
          <span aria-hidden="true" class="site-popup-close-char">&times;</span>
        </button>

        <a href="/menu/" class="site-popup-link" title="Aller au menu">
            {% image "./src/img/popup.png", "Promotion", [600], "(min-width: 720px) 600px, 90vw", "site-popup-image" %}
        </a>
    </div>
</div>

<style>
/* Popup basic styles */
.site-popup-overlay {
  display: none; /* shown by JS on load */
  position: fixed;
  inset: 0;
  background: rgba(0,0,0,0.5);
  z-index: 9999;
  align-items: center;
  justify-content: center;
  padding: 1rem;
}

.site-popup {
  position: relative;
  max-width: 90vw;
  max-height: 90vh;
  overflow: hidden;
  background: transparent;  /* Changed from #fff to transparent */
}

.site-popup-image {
  display: block;
  width: 100%;
  height: auto;
  cursor: pointer;
  max-height: 80vh;
  object-fit: contain;
  background: transparent;  /* Added this line */
}

/* Close button top-right */
.site-popup-close {
  position: absolute;
  top: 12px;
  right: 12px;
  background: rgba(0,0,0,0.6);
  color: #fff;
  border: none;
  width: 40px;
  height: 40px;
  border-radius: 100%;
  font-size: 20px;
  display: block;            /* utilise block plutôt que inline-flex */
  text-align: center;        /* centre horizontalement le contenu */
  line-height: 40px;         /* centre verticalement le caractère × */
  padding: 0;
  cursor: pointer;
  z-index: 2;
}
.site-popup-close:focus { outline: 2px solid rgba(255,255,255,0.9); }

.site-popup-close-char {
  display: inline-block;
  line-height: normal;       /* laisse l'icône utiliser sa taille normale */
  transform: translateY(0); /* évite décalage sur certaines polices */
}
@media (min-width: 720px) {
  .site-popup { max-width: 600px; }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function () {
  var OVERLAY_ID = 'site-popup-overlay';
  var STORAGE_KEY = 'sitePopupClosedUntil';
  var HIDE_MS = 24 * 60 * 60 * 1000; // 24 heures

  var overlay = document.getElementById(OVERLAY_ID);
  if (!overlay) return;

  function getStoredUntil() {
    try {
      var v = localStorage.getItem(STORAGE_KEY);
      return v ? parseInt(v, 10) : 0;
    } catch (e) {
      return 0;
    }
  }

  function setStoredUntil(msFromNow) {
    try {
      var until = Date.now() + msFromNow;
      localStorage.setItem(STORAGE_KEY, String(until));
      // Fallback cookie (uncomment si tu veux cookies au lieu de localStorage)
      // var d = new Date(until); document.cookie = "site_popup_closed_until=" + d.toUTCString() + "; path=/; SameSite=Lax";
    } catch (e) {
      // ignore
    }
  }

  function shouldShow() {
    var until = getStoredUntil();
    return !(until && until > Date.now());
  }

  function showPopup() {
    overlay.style.display = 'flex';
    overlay.setAttribute('aria-hidden', 'false');
  }

  function closePopup() {
    overlay.setAttribute('aria-hidden', 'true');
    overlay.parentNode && overlay.parentNode.removeChild(overlay);
  }

  // If user closed less than 24h ago, don't show
  if (!shouldShow()) {
    return;
  }

  // show
  showPopup();

  // close button
  var closeBtn = overlay.querySelector('.site-popup-close');
  if (closeBtn) {
    closeBtn.addEventListener('click', function (e) {
      e.stopPropagation();
      setStoredUntil(HIDE_MS);
      closePopup();
    });
  }

  // click outside content closes and stores preference
  overlay.addEventListener('click', function (e) {
    if (e.target === overlay) {
      setStoredUntil(HIDE_MS);
      closePopup();
    }
  });

  // if user clicks the link (image) set the preference so it won't reappear on return
  var link = overlay.querySelector('.site-popup-link');
  if (link) {
    link.addEventListener('click', function () {
      setStoredUntil(HIDE_MS);
      // allow default navigation
    });
  }

  // optional: expose a function to clear the stored preference (useful pour tests)
  window.clearSitePopupPreference = function () {
    try { localStorage.removeItem(STORAGE_KEY); } catch (e) {}
  };
});
</script>
{%- endif -%}